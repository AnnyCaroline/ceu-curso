#include "random.ceu"

emit FRAMES_SET(yes);

event int collision;
event int game_over;

code/await Player(var int id, var int up, var int right, var int down, var int left, var Color color) -> (var Point pt) -> none do
    var int score = 0;
    pt = val Point(0,0);
    var int x_axis = 0;
    var int y_axis = 0;

    par/or do
        var int key;
        every key in KEY_PRESS do
            //atualiza x_axis e y_axis com 1 ou -1
            if (key == left) then
                x_axis = -1;
            else/if (key == right) then
                x_axis = 1;
            else/if (key == up) then
                y_axis = 1;
            else/if (key == down) then
                y_axis = -1;
            end 
        end
    with
        var int key;
        every key in KEY_UNPRESS do
            //atualiza x_axis e y_axis com 0
            if (key == left) or (key == right) then
                x_axis = 0;
            else/if (key == up) or (key == down) then
                y_axis = 0;
            end 
        end        
    with
        every FRAMES_UPDATE do
            //atualiza pt com base em x_axis e y_axis
            if (x_axis == 1) and (pt.x < 25) then
                pt.x = pt.x + 1;
            else/if (x_axis == -1) and (pt.x > -25) then
                pt.x = pt.x - 1;
            end

            if (y_axis == 1) and (pt.y < 25) then
                pt.y = pt.y + 1;
            else/if (y_axis == -1) and (pt.y > -25) then
                pt.y = pt.y - 1;
            end
        end
    with
        every FRAMES_REDRAW do
            //desenha pixel
            emit GRAPHICS_SET_COLOR_NAME(color);
            emit GRAPHICS_DRAW_PIXEL(pt.x, pt.y);
            //desenha score
            if (id == 1) then
                emit GRAPHICS_DRAW_INT(-21,21,score);
            else
                emit GRAPHICS_DRAW_INT(23,21,score);
            end
        end
    with
        loop do
            var int r_id = await outer.collision until r_id == id;
            score = score+1;
            _printf("%d - score %d\n", id, score);
            if (score==3) then
                emit outer.game_over(id);
            end
        end
    with
        await outer.game_over;
    end
end

code/await Pixel (none) -> (var Point pt) -> none do
    pt = call Random_Point_In_Square(-25,-25,25,17);

    var Color color = COLOR_RED;
    par/or do
        loop do
            color = COLOR_RED;
            await 300ms;

            color = COLOR_YELLOW;
            await 300ms;
        end
    with
        every FRAMES_REDRAW do
            emit GRAPHICS_SET_COLOR_NAME(color);
            emit GRAPHICS_DRAW_PIXEL(pt.x, pt.y);
        end
    with
        await MOUSE_CLICK;
    with
        await outer.game_over;
    end
end

pool[5] Pixel pixels;
pool[2] Player players;
spawn Player(1, KEY_UP, KEY_RIGHT, KEY_DOWN, KEY_LEFT, COLOR_BLUE) in players;
spawn Player(2, KEY_w , KEY_d    , KEY_s   , KEY_a   , COLOR_RED) in players;

var int winner;

par/or do
    every 1s do
        spawn Pixel() in pixels;
    end
with
    // Aqui vamos tratar a colisão
    every FRAMES_UPDATE do
        var&? Player player;
        loop player in players do
            var&? Pixel pixel;
            loop pixel in pixels do
                // verifico a colisão e tomo uma ação
                if (player!.pt.x == pixel!.pt.x) and (player!.pt.y == pixel!.pt.y) then
                    kill pixel;
                    emit collision(player!.id);
                end
            end
        end
    end
with
    winner = await game_over;
end

emit GRAPHICS_SET_COLOR_NAME(COLOR_WHITE);
every FRAMES_REDRAW do
    emit GRAPHICS_DRAW_INT(0,10,winner);
    emit GRAPHICS_DRAW_TEXT(0,0,"Fim");
end